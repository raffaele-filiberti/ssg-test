name: CI to Docker Hub

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Get branch name
        run: echo "##[set-output name=value;]$(if [[ ${GITHUB_REF#refs/heads/} -eq "main" ]]; then echo "prod"; else echo "dev"; fi;)"
        id: branch_name

      - name: Semantic Release
        id: semantic   # Need an `id` for output variables
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/changelog
            @semantic-release/git

      - name: Login to Docker Hub
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        if: steps.semantic.outputs.new_release_published == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        if: steps.semantic.outputs.new_release_published == 'true'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            flbrt/ssg-test:latest
            flbrt/ssg-test:${{ steps.branch_name.outputs.value }}-${{ steps.semantic.outputs.new_release_version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Image digest
        if: steps.semantic.outputs.new_release_published == 'true'
        run: echo ${{ steps.docker_build.outputs.digest }}
